trigger:
- master

parameters:
- name: publish_param
  displayName: Publish wheels by uploading to PyPI
  type: boolean
  default: false
- name: verbose_param
  displayName: Build C dependencies verbosely
  type: boolean
  default: false
- name: konga_branch_param
  displayName: Branch from which to fetch Konga sources
  type: string
  default: stable-1.10.0

variables:
  konga_branch: ${{ parameters.konga_branch_param }}
  verbose: ${{ parameters.verbose_param }}

jobs:

- job: LinuxSDist
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    python.architecture: 'none'
  steps:
    - script: |
        python -m pip install setuptools twine
        python setup.py sdist
      displayName: Publish sdist
    - template: ./azure-publish-dist.yml
    - script: |
        python -m twine upload -r pypi --config-file $(PYPIRC_PATH) dist/*
      displayName: 'Upload wheels to PyPI'
      condition: and(succeeded(), eq('${{ parameters.publish_param }}', true))


- job: ManyLinux
  strategy:
    matrix:
      64Bit:
        arch: x86_64
        plat: manylinux2010_x86_64
        image: quay.io/pypa/manylinux2010_x86_64
        python.architecture: x64
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - template: ./azure-setup.yml
    - template: ./azure-manylinux-wheels.yml
    - template: ./azure-publish-dist.yml
    - script: |
        pip install twine
        python -m twine upload -r pypi --config-file $(PYPIRC_PATH) dist/*
      displayName: 'Upload wheels to PyPI'
      condition: and(succeeded(), eq('${{ parameters.publish_param }}', true))

- job: macOS
  variables:
    python.architecture: 'x64'
    deps_sdk: macosx11.1
  strategy:
    matrix:
      Python27:
        arch: '-arch x86_64'
        cmake_arch: x86_64
        python.version: '2.7'
      Python36:
        arch: '-arch x86_64'
        cmake_arch: x86_64
        python.version: '3.6'
      Python37:
        arch: '-arch x86_64'
        cmake_arch: x86_64
        python.version: '3.7'
      Python38:
        arch: '-arch x86_64'
        cmake_arch: x86_64
        python.version: '3.8'
      Python39:
        arch: '-arch x86_64 -arch arm64'
        cmake_arch: arm64;x86_64
        python.version: '3.9'
  pool:
    vmImage: 'macOS-11'
  steps:
    - template: ./azure-setup.yml
    - template: ./azure-steps.yml
    - template: ./azure-publish-dist.yml
    - script: |
        pip install twine
        python -m twine upload -r pypi --config-file $(PYPIRC_PATH) dist/*
      displayName: 'Upload wheels to PyPI'
      condition: and(succeeded(), eq('${{ parameters.publish_param }}', true))

- job: Windows
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
        python.architecture: 'x64'
        vcvarsall: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat'
      Python37:
        python.version: '3.7'
        python.architecture: 'x64'
        vcvarsall: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat'
      Python38:
        python.version: '3.8'
        python.architecture: 'x64'
        vcvarsall: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat'
      Python39:
        python.version: '3.9'
        python.architecture: 'x64'
        vcvarsall: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat'
      Python36_32:
        python.version: '3.6'
        python.architecture: 'x86'
        vcvarsall: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat'
      Python37_32:
        python.version: '3.7'
        python.architecture: 'x86'
        vcvarsall: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat'
      Python38_32:
        python.version: '3.8'
        python.architecture: 'x86'
        vcvarsall: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat'
      Python39_32:
        python.version: '3.9'
        python.architecture: 'x86'
        vcvarsall: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat'
  pool:
    vmImage: 'windows-latest'
  steps:
    - template: ./azure-setup.yml
    - template: ./azure-steps.yml
    - template: ./azure-publish-dist.yml
    - script: |
        pip install twine
        python -m twine upload -r pypi --config-file $(PYPIRC_PATH) dist/*
      displayName: 'Upload wheels to PyPI'
      condition: and(succeeded(), eq('${{ parameters.publish_param }}', true))
